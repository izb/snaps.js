{"ts":1364637060852,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*global define*/\ndefine(function() {\n\n    'use strict';\n\n    var sn;\n\n    function Face8Way() {\n    }\n\n    /** Called with the update options as the 'this' context, one of which\n     * is this.sprite, which refers to the sprite being updated.\n     * @param  {Number} now The time of the current frame\n     * @param  {Bool} phaseOn If the update is controlled by a phaser,\n     * this will be true to hint that we do a full batch of work, or false\n     * to hint that we try to exit as trivially as possible. Ignored on this\n     * plugin.\n     * @return true normally, or false to prevent any further\n     * plugins being called on this sprite for this frame.\n     */\n    Face8Way.prototype.update = function(now, phaseOn) {\n\n        var s = this.sprite;\n\n        var dx = s.directionx - s.x;\n        var dy = 2*(s.directiony - s.y); /* Because Y is halved in isometric land */\n\n        var d;\n\n        if (dy===0) {\n            if (dx===0) {\n                d = this.direction;\n            } else {\n                d = dx>0?'e':'w';\n            }\n        } else {\n            /* dy!=0 => Division is ok */\n            var r = dx/dy;\n            if (r>=0) {\n                if (r < 0.41421) {\n                    d = dy>0?'s':'n';\n                } else if(r > 2.4142) {\n                    d = dx>0?'e':'w';\n                } else {\n                    d = dx>0?'se':'nw';\n                }\n            } else {\n                if (r > -0.41421) {\n                    d = dy>0?'s':'n';\n                } else if(r < -2.4142) {\n                    d = dx>0?'e':'w';\n                } else {\n                    d = dx>0?'ne':'sw';\n                }\n            }\n        }\n\n        this.direction = d;\n\n        this.oldx = s.x;\n        this.oldy = s.y;\n\n        s.setState(s.stateName, this.direction);\n\n        return true;\n    };\n\n    Face8Way.prototype.init = function() {\n        this.direction = 'e';\n    };\n\n    return function(snaps) {\n        sn = snaps;\n        sn.registerSpriteUpdater('8way', Face8Way);\n    };\n\n});\n"]],"start1":0,"start2":0,"length1":0,"length2":2028}]],"length":2028}
